/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MockScriptEngine } from "../MockScriptEngine";

export class MockScriptEngine__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(_MTRG: string, overrides?: Overrides): Promise<MockScriptEngine> {
    return super.deploy(_MTRG, overrides || {}) as Promise<MockScriptEngine>;
  }
  getDeployTransaction(
    _MTRG: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_MTRG, overrides || {});
  }
  attach(address: string): MockScriptEngine {
    return super.attach(address) as MockScriptEngine;
  }
  connect(signer: Signer): MockScriptEngine__factory {
    return super.connect(signer) as MockScriptEngine__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockScriptEngine {
    return new Contract(address, _abi, signerOrProvider) as MockScriptEngine;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract MockMTRG",
        name: "_MTRG",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "MTRG",
    outputs: [
      {
        internalType: "contract MockMTRG",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "boundedMTRG",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "bucket",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "bucketID",
        type: "bytes32",
      },
    ],
    name: "bucketClose",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "bucketID",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "bucketDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "fromBucketID",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "toBucketID",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "bucketMerge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "candidate",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "bucketOpen",
    outputs: [
      {
        internalType: "bytes32",
        name: "bucketID",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "fromBucketID",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "toBucketID",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "bucketTransferFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "bucketUser",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "bucketID",
        type: "bytes32",
      },
    ],
    name: "bucketValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "bucketID",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "bucketWithdraw",
    outputs: [
      {
        internalType: "bytes32",
        name: "newBktID",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610efa380380610efa83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610e67806100936000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c806375a5e2881161008157806388b0e2a41161005b57806388b0e2a4146101a85780639748bf5b146101d3578063b7b4de67146101fe57600080fd5b806375a5e2881461015757806377d7f9131461016a5780637de9d11f1461017d57600080fd5b80633a8dd82a116100b25780633a8dd82a1461011c578063561f97be1461013157806372be77a01461014457600080fd5b80631b7846c0146100d9578063228cb733146100ee5780633060ef72146100f6575b600080fd5b6100ec6100e7366004610c7f565b610227565b005b6100ec610366565b610109610104366004610cbd565b61045c565b6040519081526020015b60405180910390f35b33600090815260036020526040902054610109565b61010961013f366004610ce7565b61062a565b6100ec610152366004610d1c565b610793565b6100ec610165366004610d1c565b610868565b6100ec610178366004610d48565b61090e565b61010961018b366004610cbd565b600260209081526000928352604080842090915290825290205481565b6000546101bb906001600160a01b031681565b6040516001600160a01b039091168152602001610113565b6101096101e1366004610d48565b336000908152600260209081526040808320938352929052205490565b6101bb61020c366004610d48565b6001602052600090815260409020546001600160a01b031681565b3360009081526002602090815260408083208584529091529020546102935760405162461bcd60e51b815260206004820152601160248201527f6275636b6574206e6f742065786973742100000000000000000000000000000060448201526064015b60405180910390fd5b60005460405163bb35783b60e01b8152336004820152306024820152604481018390526001600160a01b039091169063bb35783b906064016020604051808303816000875af11580156102ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030e9190610d61565b5033600090815260026020908152604080832085845290915281208054839290610339908490610d99565b9091555050336000908152600360205260408120805483929061035d908490610d99565b90915550505050565b60006103726004610ad8565b905060005b8181101561045857600061038c600483610ae8565b6000818152600160209081526040808320546001600160a01b031680845260028352818420858552909252822054929350916103ca90600a90610db1565b6000546040516340c10f1960e01b81526001600160a01b038581166004830152602482018490529293509116906340c10f19906044016020604051808303816000875af115801561041f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104439190610d61565b505050508061045190610dd3565b9050610377565b5050565b604080513360208083018290526001600160a01b038616838501528351808403850181526060909301845282519281019290922060009182526002835283822081835290925291909120541580156104c957506000818152600160205260409020546001600160a01b0316155b6105155760405162461bcd60e51b815260206004820152600d60248201527f6275636b65742065786973742100000000000000000000000000000000000000604482015260640161028a565b60005460405163bb35783b60e01b8152336004820152306024820152604481018490526001600160a01b039091169063bb35783b906064016020604051808303816000875af115801561056c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105909190610d61565b50600081815260016020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001633908117909155835260028252808320848452909152812080548492906105ee908490610d99565b90915550503360009081526003602052604081208054849290610612908490610d99565b909155506106239050600482610afb565b5092915050565b6000838152600160209081526040808320546001600160a01b0316808452600283528184208785529092528220548411156106a75760405162461bcd60e51b815260206004820152601260248201527f6275636b6574206e6f7420656e6f756768210000000000000000000000000000604482015260640161028a565b60005460405163bb35783b60e01b81523060048201526001600160a01b038581166024830152604482018790529091169063bb35783b906064016020604051808303816000875af1158015610700573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107249190610d61565b506001600160a01b038116600090815260026020908152604080832088845290915281208054869290610758908490610dee565b90915550506001600160a01b03811660009081526003602052604081208054869290610785908490610dee565b909155509195945050505050565b33600090815260026020908152604080832086845290915290205468056bc75e2d63100000106108055760405162461bcd60e51b815260206004820152600960248201527f3130302065746865720000000000000000000000000000000000000000000000604482015260640161028a565b3360009081526002602090815260408083208684529091528120805483929061082f908490610dee565b90915550503360009081526002602090815260408083208584529091528120805483929061085e908490610d99565b9091555050505050565b33600090815260026020908152604080832086845290915281208054839290610892908490610dee565b9091555050336000908152600260209081526040808320868452909152902054156108e45760405162461bcd60e51b815260206004820152600260248201526103e360f41b604482015260640161028a565b3360009081526002602090815260408083208584529091528120805483929061085e908490610d99565b6000818152600160209081526040808320546001600160a01b031680845260028352818420858552909252909120548061098a5760405162461bcd60e51b815260206004820152601160248201527f6275636b6574206e6f7420657869737421000000000000000000000000000000604482015260640161028a565b336001600160a01b038316146109e25760405162461bcd60e51b815260206004820152601060248201527f6275636b6574206e6f7420796f75722100000000000000000000000000000000604482015260640161028a565b60005460405163bb35783b60e01b81523060048201526001600160a01b038481166024830152604482018490529091169063bb35783b906064016020604051808303816000875af1158015610a3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5f9190610d61565b506001600160a01b0382166000818152600260209081526040808320878452825280832054938352600390915281208054909190610a9e908490610dee565b90915550506001600160a01b0382166000908152600260209081526040808320868452909152812055610ad2600484610b07565b50505050565b6000610ae2825490565b92915050565b6000610af48383610b13565b9392505050565b6000610af48383610b3d565b6000610af48383610b8c565b6000826000018281548110610b2a57610b2a610e05565b9060005260206000200154905092915050565b6000818152600183016020526040812054610b8457508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610ae2565b506000610ae2565b60008181526001830160205260408120548015610c75576000610bb0600183610dee565b8554909150600090610bc490600190610dee565b9050818114610c29576000866000018281548110610be457610be4610e05565b9060005260206000200154905080876000018481548110610c0757610c07610e05565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610c3a57610c3a610e1b565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610ae2565b6000915050610ae2565b60008060408385031215610c9257600080fd5b50508035926020909101359150565b80356001600160a01b0381168114610cb857600080fd5b919050565b60008060408385031215610cd057600080fd5b610cd983610ca1565b946020939093013593505050565b600080600060608486031215610cfc57600080fd5b8335925060208401359150610d1360408501610ca1565b90509250925092565b600080600060608486031215610d3157600080fd5b505081359360208301359350604090920135919050565b600060208284031215610d5a57600080fd5b5035919050565b600060208284031215610d7357600080fd5b81518015158114610af457600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610dac57610dac610d83565b500190565b600082610dce57634e487b7160e01b600052601260045260246000fd5b500490565b6000600019821415610de757610de7610d83565b5060010190565b600082821015610e0057610e00610d83565b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea26469706673582212206bec7320e934707cb02ca539e2d47e6aedb6a5025a4a71ebd389f18507cc251f64736f6c634300080b0033";
