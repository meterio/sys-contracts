/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MeterERC20 } from "../MeterERC20";

export class MeterERC20__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<MeterERC20> {
    return super.deploy(overrides || {}) as Promise<MeterERC20>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MeterERC20 {
    return super.attach(address) as MeterERC20;
  }
  connect(signer: Signer): MeterERC20__factory {
    return super.connect(signer) as MeterERC20__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MeterERC20 {
    return new Contract(address, _abi, signerOrProvider) as MeterERC20;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOfBoundMtr",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBurned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180546001600160a01b0319166a4d657465724e617469766517905534801561002d57600080fd5b506108008061003d6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c806370a0823111610081578063a9059cbb1161005b578063a9059cbb146101b9578063d89135cd146101cc578063dd62ed3e146101d457600080fd5b806370a0823114610174578063883cb39d1461018757806395d89b411461019a57600080fd5b806318160ddd116100b257806318160ddd1461013c57806323b872dd14610152578063313ce5671461016557600080fd5b806306fdde03146100ce578063095ea7b314610119575b600080fd5b60408051808201909152600581527f4d6574657200000000000000000000000000000000000000000000000000000060208201525b6040516101109190610645565b60405180910390f35b61012c6101273660046106b6565b61020b565b6040519015158152602001610110565b61014461021f565b604051908152602001610110565b61012c6101603660046106e0565b610292565b60405160128152602001610110565b61014461018236600461071c565b610354565b61014461019536600461071c565b6103ca565b60408051808201909152600381526226aa2960e91b6020820152610103565b61012c6101c73660046106b6565b6103fd565b610144610413565b6101446101e2366004610737565b6001600160a01b0391821660009081526020818152604080832093909416825291909152205490565b600061021833848461045d565b9392505050565b6001546040805163076e361d60e01b815290516000926001600160a01b03169163076e361d9160048083019260209291908290030181865afa158015610269573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028d919061076a565b905090565b6001600160a01b0383166000908152602081815260408083203384529091528120548211156103085760405162461bcd60e51b815260206004820152601f60248201527f6275696c74696e3a20696e73756666696369656e7420616c6c6f77616e63650060448201526064015b60405180910390fd5b6001600160a01b03841660009081526020818152604080832033845290915281208054849290610339908490610783565b9091555061034a90508484846104c3565b5060019392505050565b600154604051630511d90360e01b81526001600160a01b0383811660048301526000921690630511d903906024015b602060405180830381865afa1580156103a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c4919061076a565b92915050565b60015460405163186d514160e11b81526001600160a01b03838116600483015260009216906330daa28290602401610383565b600061040a3384846104c3565b50600192915050565b6001546040805163ccc7df9d60e01b815290516000926001600160a01b03169163ccc7df9d9160048083019260209291908290030181865afa158015610269573d6000803e3d6000fd5b6001600160a01b0383811660008181526020818152604080832094871680845294825280832086905551858152919392917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35060019392505050565b80156105f35760015460405163f14645f560e01b81526001600160a01b038581166004830152602482018490529091169063f14645f5906044016020604051808303816000875af115801561051c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054091906107a8565b61058c5760405162461bcd60e51b815260206004820152601d60248201527f6275696c74696e3a20696e73756666696369656e742062616c616e636500000060448201526064016102ff565b60015460405163740b155f60e01b81526001600160a01b038481166004830152602482018490529091169063740b155f90604401600060405180830381600087803b1580156105da57600080fd5b505af11580156105ee573d6000803e3d6000fd5b505050505b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161063891815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561067257858101830151858201604001528201610656565b81811115610684576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146106b157600080fd5b919050565b600080604083850312156106c957600080fd5b6106d28361069a565b946020939093013593505050565b6000806000606084860312156106f557600080fd5b6106fe8461069a565b925061070c6020850161069a565b9150604084013590509250925092565b60006020828403121561072e57600080fd5b6102188261069a565b6000806040838503121561074a57600080fd5b6107538361069a565b91506107616020840161069a565b90509250929050565b60006020828403121561077c57600080fd5b5051919050565b6000828210156107a357634e487b7160e01b600052601160045260246000fd5b500390565b6000602082840312156107ba57600080fd5b8151801515811461021857600080fdfea2646970667358221220b7bcef77008dece7b6ecaed56b5e17abd79e071a7c73c33ace5d51e36ec2cb0d64736f6c634300080b0033";
