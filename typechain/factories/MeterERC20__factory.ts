/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MeterERC20 } from "../MeterERC20";

export class MeterERC20__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<MeterERC20> {
    return super.deploy(overrides || {}) as Promise<MeterERC20>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MeterERC20 {
    return super.attach(address) as MeterERC20;
  }
  connect(signer: Signer): MeterERC20__factory {
    return super.connect(signer) as MeterERC20__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MeterERC20 {
    return new Contract(address, _abi, signerOrProvider) as MeterERC20;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOfBoundMtr",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "move",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBurned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600180546001600160a01b0319166a4d657465724e617469766517905534801561002d57600080fd5b506108f28061003d6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063883cb39d11610071578063883cb39d1461015a57806395d89b411461016d578063a9059cbb1461018c578063bb35783b1461019f578063d89135cd146101b2578063dd62ed3e146101ba57600080fd5b806306fdde03146100b9578063095ea7b3146100ec57806318160ddd1461010f57806323b872dd14610125578063313ce5671461013857806370a0823114610147575b600080fd5b60408051808201909152600581526426b2ba32b960d91b60208201525b6040516100e3919061070f565b60405180910390f35b6100ff6100fa36600461077c565b6101f1565b60405190151581526020016100e3565b610117610205565b6040519081526020016100e3565b6100ff6101333660046107a8565b610278565b604051601281526020016100e3565b6101176101553660046107e9565b61033a565b6101176101683660046107e9565b6103b0565b60408051808201909152600381526226aa2960e91b60208201526100d6565b6100ff61019a36600461077c565b6103e3565b6100ff6101ad3660046107a8565b6103f9565b6101176104dd565b6101176101c8366004610806565b6001600160a01b0391821660009081526020818152604080832093909416825291909152205490565b60006101fe338484610527565b9392505050565b6001546040805163076e361d60e01b815290516000926001600160a01b03169163076e361d9160048083019260209291908290030181865afa15801561024f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610273919061083f565b905090565b6001600160a01b0383166000908152602081815260408083203384529091528120548211156102ee5760405162461bcd60e51b815260206004820152601f60248201527f6275696c74696e3a20696e73756666696369656e7420616c6c6f77616e63650060448201526064015b60405180910390fd5b6001600160a01b0384166000908152602081815260408083203384529091528120805484929061031f908490610858565b90915550610330905084848461058d565b5060019392505050565b600154604051630511d90360e01b81526001600160a01b0383811660048301526000921690630511d903906024015b602060405180830381865afa158015610386573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103aa919061083f565b92915050565b60015460405163186d514160e11b81526001600160a01b03838116600483015260009216906330daa28290602401610369565b60006103f033848461058d565b50600192915050565b60006001600160a01b038416331480610486575060015460405163059950e960e01b81526001600160a01b0386811660048301523392169063059950e990602401602060405180830381865afa158015610457573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047b919061087d565b6001600160a01b0316145b6104d25760405162461bcd60e51b815260206004820181905260248201527f6275696c74696e3a2073656c66206f72206d617374657220726571756972656460448201526064016102e5565b61033084848461058d565b6001546040805163ccc7df9d60e01b815290516000926001600160a01b03169163ccc7df9d9160048083019260209291908290030181865afa15801561024f573d6000803e3d6000fd5b6001600160a01b0383811660008181526020818152604080832094871680845294825280832086905551858152919392917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35060019392505050565b80156106bd5760015460405163f14645f560e01b81526001600160a01b038581166004830152602482018490529091169063f14645f5906044016020604051808303816000875af11580156105e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060a919061089a565b6106565760405162461bcd60e51b815260206004820152601d60248201527f6275696c74696e3a20696e73756666696369656e742062616c616e636500000060448201526064016102e5565b60015460405163740b155f60e01b81526001600160a01b038481166004830152602482018490529091169063740b155f90604401600060405180830381600087803b1580156106a457600080fd5b505af11580156106b8573d6000803e3d6000fd5b505050505b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161070291815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561073c57858101830151858201604001528201610720565b8181111561074e576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b038116811461077957600080fd5b50565b6000806040838503121561078f57600080fd5b823561079a81610764565b946020939093013593505050565b6000806000606084860312156107bd57600080fd5b83356107c881610764565b925060208401356107d881610764565b929592945050506040919091013590565b6000602082840312156107fb57600080fd5b81356101fe81610764565b6000806040838503121561081957600080fd5b823561082481610764565b9150602083013561083481610764565b809150509250929050565b60006020828403121561085157600080fd5b5051919050565b60008282101561087857634e487b7160e01b600052601160045260246000fd5b500390565b60006020828403121561088f57600080fd5b81516101fe81610764565b6000602082840312156108ac57600080fd5b815180151581146101fe57600080fdfea26469706673582212206c3fd4933e2b847b98d059f42590416a4e82741de2da4eb3a2c7e263e4eb5a6364736f6c634300080b0033";
